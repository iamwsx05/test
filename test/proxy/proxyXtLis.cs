//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.6.1055.0。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetPatientsInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPatientsInfoSGOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPatientsInfoByDeptIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetResultInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetResultInfoByBarCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetResultByItmIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetResultByItmIDAndSamIdOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPatientsInfoByBarCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLISSampleOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBacResultInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCsResultInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBcPatientsInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateBarCodePrintStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetQualitativeResultByItmIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisSpecimenReportOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisReportResultOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisItemResultOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisItemResultByDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisPatInfoByDateOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisCrisisRecodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisItemSenResultOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCTLisItemOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCTSpecimenOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetNotGatherBarcodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback V_Hais_PathogenOperationCompleted;
    
    private System.Threading.SendOrPostCallback V_Hais_AntiNameOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPatientsPicPathOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateInfoByBarcodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback ReportPrintedOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisReportPicOperationCompleted;
    
    private System.Threading.SendOrPostCallback ConfirmBcBarCodeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisRepByPregnamtOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBloodTypeResultOperationCompleted;
    
    private System.Threading.SendOrPostCallback V_LXZZ_JYOperationCompleted;
    
    private System.Threading.SendOrPostCallback V_LXZZ_JYMXOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBarcodeForUPIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBarcodeForPIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback LIS_GetCuvetteInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback QueryLabResultPictureOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteUrgentMessageOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPatientsInfoWithOutIfOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPatientsInfoByDateRangeOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdatePatSlftPrtOperationCompleted;
    
    private System.Threading.SendOrPostCallback SendBloodLeadNoticeOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLisReportForCDAOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetReportAmountOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetReportImagesOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddDIYWJZMsgOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetApplyStatusOperationCompleted;
    
    /// <remarks/>
    public Service() {
        this.Url = "http://192.168.100.11:8091/LisReport.asmx";
    }
    
    /// <remarks/>
    public event GetPatientsInfoCompletedEventHandler GetPatientsInfoCompleted;
    
    /// <remarks/>
    public event GetPatientsInfoSGCompletedEventHandler GetPatientsInfoSGCompleted;
    
    /// <remarks/>
    public event GetPatientsInfoByDeptIDCompletedEventHandler GetPatientsInfoByDeptIDCompleted;
    
    /// <remarks/>
    public event GetResultInfoCompletedEventHandler GetResultInfoCompleted;
    
    /// <remarks/>
    public event GetResultInfoByBarCodeCompletedEventHandler GetResultInfoByBarCodeCompleted;
    
    /// <remarks/>
    public event GetResultByItmIDCompletedEventHandler GetResultByItmIDCompleted;
    
    /// <remarks/>
    public event GetResultByItmIDAndSamIdCompletedEventHandler GetResultByItmIDAndSamIdCompleted;
    
    /// <remarks/>
    public event GetPatientsInfoByBarCodeCompletedEventHandler GetPatientsInfoByBarCodeCompleted;
    
    /// <remarks/>
    public event GetLISSampleCompletedEventHandler GetLISSampleCompleted;
    
    /// <remarks/>
    public event GetBacResultInfoCompletedEventHandler GetBacResultInfoCompleted;
    
    /// <remarks/>
    public event GetCsResultInfoCompletedEventHandler GetCsResultInfoCompleted;
    
    /// <remarks/>
    public event GetBcPatientsInfoCompletedEventHandler GetBcPatientsInfoCompleted;
    
    /// <remarks/>
    public event UpdateBarCodePrintStatusCompletedEventHandler UpdateBarCodePrintStatusCompleted;
    
    /// <remarks/>
    public event GetQualitativeResultByItmIDCompletedEventHandler GetQualitativeResultByItmIDCompleted;
    
    /// <remarks/>
    public event GetLisSpecimenReportCompletedEventHandler GetLisSpecimenReportCompleted;
    
    /// <remarks/>
    public event GetLisReportResultCompletedEventHandler GetLisReportResultCompleted;
    
    /// <remarks/>
    public event GetLisItemResultCompletedEventHandler GetLisItemResultCompleted;
    
    /// <remarks/>
    public event GetLisItemResultByDateCompletedEventHandler GetLisItemResultByDateCompleted;
    
    /// <remarks/>
    public event GetLisPatInfoByDateCompletedEventHandler GetLisPatInfoByDateCompleted;
    
    /// <remarks/>
    public event GetLisCrisisRecodeCompletedEventHandler GetLisCrisisRecodeCompleted;
    
    /// <remarks/>
    public event GetLisItemSenResultCompletedEventHandler GetLisItemSenResultCompleted;
    
    /// <remarks/>
    public event GetCTLisItemCompletedEventHandler GetCTLisItemCompleted;
    
    /// <remarks/>
    public event GetCTSpecimenCompletedEventHandler GetCTSpecimenCompleted;
    
    /// <remarks/>
    public event GetNotGatherBarcodeCompletedEventHandler GetNotGatherBarcodeCompleted;
    
    /// <remarks/>
    public event V_Hais_PathogenCompletedEventHandler V_Hais_PathogenCompleted;
    
    /// <remarks/>
    public event V_Hais_AntiNameCompletedEventHandler V_Hais_AntiNameCompleted;
    
    /// <remarks/>
    public event GetPatientsPicPathCompletedEventHandler GetPatientsPicPathCompleted;
    
    /// <remarks/>
    public event UpdateInfoByBarcodeCompletedEventHandler UpdateInfoByBarcodeCompleted;
    
    /// <remarks/>
    public event ReportPrintedCompletedEventHandler ReportPrintedCompleted;
    
    /// <remarks/>
    public event GetLisReportPicCompletedEventHandler GetLisReportPicCompleted;
    
    /// <remarks/>
    public event ConfirmBcBarCodeCompletedEventHandler ConfirmBcBarCodeCompleted;
    
    /// <remarks/>
    public event GetLisRepByPregnamtCompletedEventHandler GetLisRepByPregnamtCompleted;
    
    /// <remarks/>
    public event GetBloodTypeResultCompletedEventHandler GetBloodTypeResultCompleted;
    
    /// <remarks/>
    public event V_LXZZ_JYCompletedEventHandler V_LXZZ_JYCompleted;
    
    /// <remarks/>
    public event V_LXZZ_JYMXCompletedEventHandler V_LXZZ_JYMXCompleted;
    
    /// <remarks/>
    public event GetBarcodeForUPIDCompletedEventHandler GetBarcodeForUPIDCompleted;
    
    /// <remarks/>
    public event GetBarcodeForPIDCompletedEventHandler GetBarcodeForPIDCompleted;
    
    /// <remarks/>
    public event LIS_GetCuvetteInfoCompletedEventHandler LIS_GetCuvetteInfoCompleted;
    
    /// <remarks/>
    public event QueryLabResultPictureCompletedEventHandler QueryLabResultPictureCompleted;
    
    /// <remarks/>
    public event DeleteUrgentMessageCompletedEventHandler DeleteUrgentMessageCompleted;
    
    /// <remarks/>
    public event GetPatientsInfoWithOutIfCompletedEventHandler GetPatientsInfoWithOutIfCompleted;
    
    /// <remarks/>
    public event GetPatientsInfoByDateRangeCompletedEventHandler GetPatientsInfoByDateRangeCompleted;
    
    /// <remarks/>
    public event UpdatePatSlftPrtCompletedEventHandler UpdatePatSlftPrtCompleted;
    
    /// <remarks/>
    public event SendBloodLeadNoticeCompletedEventHandler SendBloodLeadNoticeCompleted;
    
    /// <remarks/>
    public event GetLisReportForCDACompletedEventHandler GetLisReportForCDACompleted;
    
    /// <remarks/>
    public event GetReportAmountCompletedEventHandler GetReportAmountCompleted;
    
    /// <remarks/>
    public event GetReportImagesCompletedEventHandler GetReportImagesCompleted;
    
    /// <remarks/>
    public event AddDIYWJZMsgCompletedEventHandler AddDIYWJZMsgCompleted;
    
    /// <remarks/>
    public event GetApplyStatusCompletedEventHandler GetApplyStatusCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPatientsInfo(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId) {
        object[] results = this.Invoke("GetPatientsInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPatientsInfo(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPatientsInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetPatientsInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetPatientsInfoAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId) {
        this.GetPatientsInfoAsync(patInNo, dateTimeFrom, dateTimeTo, patOriId, null);
    }
    
    /// <remarks/>
    public void GetPatientsInfoAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, object userState) {
        if ((this.GetPatientsInfoOperationCompleted == null)) {
            this.GetPatientsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsInfoOperationCompleted);
        }
        this.InvokeAsync("GetPatientsInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId}, this.GetPatientsInfoOperationCompleted, userState);
    }
    
    private void OnGetPatientsInfoOperationCompleted(object arg) {
        if ((this.GetPatientsInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientsInfoCompleted(this, new GetPatientsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientsInfoSG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPatientsInfoSG(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, string patSocialNo) {
        object[] results = this.Invoke("GetPatientsInfoSG", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId,
                    patSocialNo});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPatientsInfoSG(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, string patSocialNo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPatientsInfoSG", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId,
                    patSocialNo}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetPatientsInfoSG(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetPatientsInfoSGAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, string patSocialNo) {
        this.GetPatientsInfoSGAsync(patInNo, dateTimeFrom, dateTimeTo, patOriId, patSocialNo, null);
    }
    
    /// <remarks/>
    public void GetPatientsInfoSGAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, string patSocialNo, object userState) {
        if ((this.GetPatientsInfoSGOperationCompleted == null)) {
            this.GetPatientsInfoSGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsInfoSGOperationCompleted);
        }
        this.InvokeAsync("GetPatientsInfoSG", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId,
                    patSocialNo}, this.GetPatientsInfoSGOperationCompleted, userState);
    }
    
    private void OnGetPatientsInfoSGOperationCompleted(object arg) {
        if ((this.GetPatientsInfoSGCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientsInfoSGCompleted(this, new GetPatientsInfoSGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientsInfoByDeptID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPatientsInfoByDeptID(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, string patDepId) {
        object[] results = this.Invoke("GetPatientsInfoByDeptID", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId,
                    patDepId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPatientsInfoByDeptID(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, string patDepId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPatientsInfoByDeptID", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId,
                    patDepId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetPatientsInfoByDeptID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetPatientsInfoByDeptIDAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, string patDepId) {
        this.GetPatientsInfoByDeptIDAsync(patInNo, dateTimeFrom, dateTimeTo, patOriId, patDepId, null);
    }
    
    /// <remarks/>
    public void GetPatientsInfoByDeptIDAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, string patDepId, object userState) {
        if ((this.GetPatientsInfoByDeptIDOperationCompleted == null)) {
            this.GetPatientsInfoByDeptIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsInfoByDeptIDOperationCompleted);
        }
        this.InvokeAsync("GetPatientsInfoByDeptID", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId,
                    patDepId}, this.GetPatientsInfoByDeptIDOperationCompleted, userState);
    }
    
    private void OnGetPatientsInfoByDeptIDOperationCompleted(object arg) {
        if ((this.GetPatientsInfoByDeptIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientsInfoByDeptIDCompleted(this, new GetPatientsInfoByDeptIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetResultInfo(string patId) {
        object[] results = this.Invoke("GetResultInfo", new object[] {
                    patId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetResultInfo(string patId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetResultInfo", new object[] {
                    patId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetResultInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetResultInfoAsync(string patId) {
        this.GetResultInfoAsync(patId, null);
    }
    
    /// <remarks/>
    public void GetResultInfoAsync(string patId, object userState) {
        if ((this.GetResultInfoOperationCompleted == null)) {
            this.GetResultInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultInfoOperationCompleted);
        }
        this.InvokeAsync("GetResultInfo", new object[] {
                    patId}, this.GetResultInfoOperationCompleted, userState);
    }
    
    private void OnGetResultInfoOperationCompleted(object arg) {
        if ((this.GetResultInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetResultInfoCompleted(this, new GetResultInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultInfoByBarCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetResultInfoByBarCode(string barcode) {
        object[] results = this.Invoke("GetResultInfoByBarCode", new object[] {
                    barcode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetResultInfoByBarCode(string barcode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetResultInfoByBarCode", new object[] {
                    barcode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetResultInfoByBarCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetResultInfoByBarCodeAsync(string barcode) {
        this.GetResultInfoByBarCodeAsync(barcode, null);
    }
    
    /// <remarks/>
    public void GetResultInfoByBarCodeAsync(string barcode, object userState) {
        if ((this.GetResultInfoByBarCodeOperationCompleted == null)) {
            this.GetResultInfoByBarCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultInfoByBarCodeOperationCompleted);
        }
        this.InvokeAsync("GetResultInfoByBarCode", new object[] {
                    barcode}, this.GetResultInfoByBarCodeOperationCompleted, userState);
    }
    
    private void OnGetResultInfoByBarCodeOperationCompleted(object arg) {
        if ((this.GetResultInfoByBarCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetResultInfoByBarCodeCompleted(this, new GetResultInfoByBarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultByItmID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetResultByItmID(string selNo, string NoType, string itmID, string Strori) {
        object[] results = this.Invoke("GetResultByItmID", new object[] {
                    selNo,
                    NoType,
                    itmID,
                    Strori});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetResultByItmID(string selNo, string NoType, string itmID, string Strori, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetResultByItmID", new object[] {
                    selNo,
                    NoType,
                    itmID,
                    Strori}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetResultByItmID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetResultByItmIDAsync(string selNo, string NoType, string itmID, string Strori) {
        this.GetResultByItmIDAsync(selNo, NoType, itmID, Strori, null);
    }
    
    /// <remarks/>
    public void GetResultByItmIDAsync(string selNo, string NoType, string itmID, string Strori, object userState) {
        if ((this.GetResultByItmIDOperationCompleted == null)) {
            this.GetResultByItmIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultByItmIDOperationCompleted);
        }
        this.InvokeAsync("GetResultByItmID", new object[] {
                    selNo,
                    NoType,
                    itmID,
                    Strori}, this.GetResultByItmIDOperationCompleted, userState);
    }
    
    private void OnGetResultByItmIDOperationCompleted(object arg) {
        if ((this.GetResultByItmIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetResultByItmIDCompleted(this, new GetResultByItmIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultByItmIDAndSamId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetResultByItmIDAndSamId(string selNo, string NoType, string itmID, string Strori, string samId) {
        object[] results = this.Invoke("GetResultByItmIDAndSamId", new object[] {
                    selNo,
                    NoType,
                    itmID,
                    Strori,
                    samId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetResultByItmIDAndSamId(string selNo, string NoType, string itmID, string Strori, string samId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetResultByItmIDAndSamId", new object[] {
                    selNo,
                    NoType,
                    itmID,
                    Strori,
                    samId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetResultByItmIDAndSamId(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetResultByItmIDAndSamIdAsync(string selNo, string NoType, string itmID, string Strori, string samId) {
        this.GetResultByItmIDAndSamIdAsync(selNo, NoType, itmID, Strori, samId, null);
    }
    
    /// <remarks/>
    public void GetResultByItmIDAndSamIdAsync(string selNo, string NoType, string itmID, string Strori, string samId, object userState) {
        if ((this.GetResultByItmIDAndSamIdOperationCompleted == null)) {
            this.GetResultByItmIDAndSamIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultByItmIDAndSamIdOperationCompleted);
        }
        this.InvokeAsync("GetResultByItmIDAndSamId", new object[] {
                    selNo,
                    NoType,
                    itmID,
                    Strori,
                    samId}, this.GetResultByItmIDAndSamIdOperationCompleted, userState);
    }
    
    private void OnGetResultByItmIDAndSamIdOperationCompleted(object arg) {
        if ((this.GetResultByItmIDAndSamIdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetResultByItmIDAndSamIdCompleted(this, new GetResultByItmIDAndSamIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientsInfoByBarCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPatientsInfoByBarCode(string barcode) {
        object[] results = this.Invoke("GetPatientsInfoByBarCode", new object[] {
                    barcode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPatientsInfoByBarCode(string barcode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPatientsInfoByBarCode", new object[] {
                    barcode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetPatientsInfoByBarCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetPatientsInfoByBarCodeAsync(string barcode) {
        this.GetPatientsInfoByBarCodeAsync(barcode, null);
    }
    
    /// <remarks/>
    public void GetPatientsInfoByBarCodeAsync(string barcode, object userState) {
        if ((this.GetPatientsInfoByBarCodeOperationCompleted == null)) {
            this.GetPatientsInfoByBarCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsInfoByBarCodeOperationCompleted);
        }
        this.InvokeAsync("GetPatientsInfoByBarCode", new object[] {
                    barcode}, this.GetPatientsInfoByBarCodeOperationCompleted, userState);
    }
    
    private void OnGetPatientsInfoByBarCodeOperationCompleted(object arg) {
        if ((this.GetPatientsInfoByBarCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientsInfoByBarCodeCompleted(this, new GetPatientsInfoByBarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLISSample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLISSample(string selNo, string source, string startdate, string enddate) {
        object[] results = this.Invoke("GetLISSample", new object[] {
                    selNo,
                    source,
                    startdate,
                    enddate});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLISSample(string selNo, string source, string startdate, string enddate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLISSample", new object[] {
                    selNo,
                    source,
                    startdate,
                    enddate}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLISSample(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLISSampleAsync(string selNo, string source, string startdate, string enddate) {
        this.GetLISSampleAsync(selNo, source, startdate, enddate, null);
    }
    
    /// <remarks/>
    public void GetLISSampleAsync(string selNo, string source, string startdate, string enddate, object userState) {
        if ((this.GetLISSampleOperationCompleted == null)) {
            this.GetLISSampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLISSampleOperationCompleted);
        }
        this.InvokeAsync("GetLISSample", new object[] {
                    selNo,
                    source,
                    startdate,
                    enddate}, this.GetLISSampleOperationCompleted, userState);
    }
    
    private void OnGetLISSampleOperationCompleted(object arg) {
        if ((this.GetLISSampleCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLISSampleCompleted(this, new GetLISSampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBacResultInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetBacResultInfo(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId) {
        object[] results = this.Invoke("GetBacResultInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBacResultInfo(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBacResultInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetBacResultInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetBacResultInfoAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId) {
        this.GetBacResultInfoAsync(patInNo, dateTimeFrom, dateTimeTo, patOriId, null);
    }
    
    /// <remarks/>
    public void GetBacResultInfoAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, object userState) {
        if ((this.GetBacResultInfoOperationCompleted == null)) {
            this.GetBacResultInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBacResultInfoOperationCompleted);
        }
        this.InvokeAsync("GetBacResultInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId}, this.GetBacResultInfoOperationCompleted, userState);
    }
    
    private void OnGetBacResultInfoOperationCompleted(object arg) {
        if ((this.GetBacResultInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBacResultInfoCompleted(this, new GetBacResultInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCsResultInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetCsResultInfo(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId) {
        object[] results = this.Invoke("GetCsResultInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCsResultInfo(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCsResultInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetCsResultInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetCsResultInfoAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId) {
        this.GetCsResultInfoAsync(patInNo, dateTimeFrom, dateTimeTo, patOriId, null);
    }
    
    /// <remarks/>
    public void GetCsResultInfoAsync(string patInNo, string dateTimeFrom, string dateTimeTo, string patOriId, object userState) {
        if ((this.GetCsResultInfoOperationCompleted == null)) {
            this.GetCsResultInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCsResultInfoOperationCompleted);
        }
        this.InvokeAsync("GetCsResultInfo", new object[] {
                    patInNo,
                    dateTimeFrom,
                    dateTimeTo,
                    patOriId}, this.GetCsResultInfoOperationCompleted, userState);
    }
    
    private void OnGetCsResultInfoOperationCompleted(object arg) {
        if ((this.GetCsResultInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCsResultInfoCompleted(this, new GetCsResultInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBcPatientsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetBcPatientsInfo(string bcNo, string dateTimeFrom, string dateTimeTo) {
        object[] results = this.Invoke("GetBcPatientsInfo", new object[] {
                    bcNo,
                    dateTimeFrom,
                    dateTimeTo});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBcPatientsInfo(string bcNo, string dateTimeFrom, string dateTimeTo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBcPatientsInfo", new object[] {
                    bcNo,
                    dateTimeFrom,
                    dateTimeTo}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetBcPatientsInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetBcPatientsInfoAsync(string bcNo, string dateTimeFrom, string dateTimeTo) {
        this.GetBcPatientsInfoAsync(bcNo, dateTimeFrom, dateTimeTo, null);
    }
    
    /// <remarks/>
    public void GetBcPatientsInfoAsync(string bcNo, string dateTimeFrom, string dateTimeTo, object userState) {
        if ((this.GetBcPatientsInfoOperationCompleted == null)) {
            this.GetBcPatientsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBcPatientsInfoOperationCompleted);
        }
        this.InvokeAsync("GetBcPatientsInfo", new object[] {
                    bcNo,
                    dateTimeFrom,
                    dateTimeTo}, this.GetBcPatientsInfoOperationCompleted, userState);
    }
    
    private void OnGetBcPatientsInfoOperationCompleted(object arg) {
        if ((this.GetBcPatientsInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBcPatientsInfoCompleted(this, new GetBcPatientsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBarCodePrintStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateBarCodePrintStatus(string barcode) {
        object[] results = this.Invoke("UpdateBarCodePrintStatus", new object[] {
                    barcode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateBarCodePrintStatus(string barcode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateBarCodePrintStatus", new object[] {
                    barcode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateBarCodePrintStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateBarCodePrintStatusAsync(string barcode) {
        this.UpdateBarCodePrintStatusAsync(barcode, null);
    }
    
    /// <remarks/>
    public void UpdateBarCodePrintStatusAsync(string barcode, object userState) {
        if ((this.UpdateBarCodePrintStatusOperationCompleted == null)) {
            this.UpdateBarCodePrintStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBarCodePrintStatusOperationCompleted);
        }
        this.InvokeAsync("UpdateBarCodePrintStatus", new object[] {
                    barcode}, this.UpdateBarCodePrintStatusOperationCompleted, userState);
    }
    
    private void OnUpdateBarCodePrintStatusOperationCompleted(object arg) {
        if ((this.UpdateBarCodePrintStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateBarCodePrintStatusCompleted(this, new UpdateBarCodePrintStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQualitativeResultByItmID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetQualitativeResultByItmID(string selNoAndpatTimes) {
        object[] results = this.Invoke("GetQualitativeResultByItmID", new object[] {
                    selNoAndpatTimes});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetQualitativeResultByItmID(string selNoAndpatTimes, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetQualitativeResultByItmID", new object[] {
                    selNoAndpatTimes}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetQualitativeResultByItmID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetQualitativeResultByItmIDAsync(string selNoAndpatTimes) {
        this.GetQualitativeResultByItmIDAsync(selNoAndpatTimes, null);
    }
    
    /// <remarks/>
    public void GetQualitativeResultByItmIDAsync(string selNoAndpatTimes, object userState) {
        if ((this.GetQualitativeResultByItmIDOperationCompleted == null)) {
            this.GetQualitativeResultByItmIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQualitativeResultByItmIDOperationCompleted);
        }
        this.InvokeAsync("GetQualitativeResultByItmID", new object[] {
                    selNoAndpatTimes}, this.GetQualitativeResultByItmIDOperationCompleted, userState);
    }
    
    private void OnGetQualitativeResultByItmIDOperationCompleted(object arg) {
        if ((this.GetQualitativeResultByItmIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetQualitativeResultByItmIDCompleted(this, new GetQualitativeResultByItmIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisSpecimenReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisSpecimenReport(string dateTimeFrom, string dateTimeTo) {
        object[] results = this.Invoke("GetLisSpecimenReport", new object[] {
                    dateTimeFrom,
                    dateTimeTo});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisSpecimenReport(string dateTimeFrom, string dateTimeTo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisSpecimenReport", new object[] {
                    dateTimeFrom,
                    dateTimeTo}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisSpecimenReport(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisSpecimenReportAsync(string dateTimeFrom, string dateTimeTo) {
        this.GetLisSpecimenReportAsync(dateTimeFrom, dateTimeTo, null);
    }
    
    /// <remarks/>
    public void GetLisSpecimenReportAsync(string dateTimeFrom, string dateTimeTo, object userState) {
        if ((this.GetLisSpecimenReportOperationCompleted == null)) {
            this.GetLisSpecimenReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisSpecimenReportOperationCompleted);
        }
        this.InvokeAsync("GetLisSpecimenReport", new object[] {
                    dateTimeFrom,
                    dateTimeTo}, this.GetLisSpecimenReportOperationCompleted, userState);
    }
    
    private void OnGetLisSpecimenReportOperationCompleted(object arg) {
        if ((this.GetLisSpecimenReportCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisSpecimenReportCompleted(this, new GetLisSpecimenReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisReportResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisReportResult(string patID) {
        object[] results = this.Invoke("GetLisReportResult", new object[] {
                    patID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisReportResult(string patID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisReportResult", new object[] {
                    patID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisReportResult(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisReportResultAsync(string patID) {
        this.GetLisReportResultAsync(patID, null);
    }
    
    /// <remarks/>
    public void GetLisReportResultAsync(string patID, object userState) {
        if ((this.GetLisReportResultOperationCompleted == null)) {
            this.GetLisReportResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisReportResultOperationCompleted);
        }
        this.InvokeAsync("GetLisReportResult", new object[] {
                    patID}, this.GetLisReportResultOperationCompleted, userState);
    }
    
    private void OnGetLisReportResultOperationCompleted(object arg) {
        if ((this.GetLisReportResultCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisReportResultCompleted(this, new GetLisReportResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisItemResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisItemResult(string patID) {
        object[] results = this.Invoke("GetLisItemResult", new object[] {
                    patID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisItemResult(string patID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisItemResult", new object[] {
                    patID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisItemResult(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisItemResultAsync(string patID) {
        this.GetLisItemResultAsync(patID, null);
    }
    
    /// <remarks/>
    public void GetLisItemResultAsync(string patID, object userState) {
        if ((this.GetLisItemResultOperationCompleted == null)) {
            this.GetLisItemResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisItemResultOperationCompleted);
        }
        this.InvokeAsync("GetLisItemResult", new object[] {
                    patID}, this.GetLisItemResultOperationCompleted, userState);
    }
    
    private void OnGetLisItemResultOperationCompleted(object arg) {
        if ((this.GetLisItemResultCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisItemResultCompleted(this, new GetLisItemResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisItemResultByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisItemResultByDate(string timeStart, string timeEnd) {
        object[] results = this.Invoke("GetLisItemResultByDate", new object[] {
                    timeStart,
                    timeEnd});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisItemResultByDate(string timeStart, string timeEnd, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisItemResultByDate", new object[] {
                    timeStart,
                    timeEnd}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisItemResultByDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisItemResultByDateAsync(string timeStart, string timeEnd) {
        this.GetLisItemResultByDateAsync(timeStart, timeEnd, null);
    }
    
    /// <remarks/>
    public void GetLisItemResultByDateAsync(string timeStart, string timeEnd, object userState) {
        if ((this.GetLisItemResultByDateOperationCompleted == null)) {
            this.GetLisItemResultByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisItemResultByDateOperationCompleted);
        }
        this.InvokeAsync("GetLisItemResultByDate", new object[] {
                    timeStart,
                    timeEnd}, this.GetLisItemResultByDateOperationCompleted, userState);
    }
    
    private void OnGetLisItemResultByDateOperationCompleted(object arg) {
        if ((this.GetLisItemResultByDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisItemResultByDateCompleted(this, new GetLisItemResultByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisPatInfoByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisPatInfoByDate(string timeStart, string timeEnd) {
        object[] results = this.Invoke("GetLisPatInfoByDate", new object[] {
                    timeStart,
                    timeEnd});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisPatInfoByDate(string timeStart, string timeEnd, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisPatInfoByDate", new object[] {
                    timeStart,
                    timeEnd}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisPatInfoByDate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisPatInfoByDateAsync(string timeStart, string timeEnd) {
        this.GetLisPatInfoByDateAsync(timeStart, timeEnd, null);
    }
    
    /// <remarks/>
    public void GetLisPatInfoByDateAsync(string timeStart, string timeEnd, object userState) {
        if ((this.GetLisPatInfoByDateOperationCompleted == null)) {
            this.GetLisPatInfoByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisPatInfoByDateOperationCompleted);
        }
        this.InvokeAsync("GetLisPatInfoByDate", new object[] {
                    timeStart,
                    timeEnd}, this.GetLisPatInfoByDateOperationCompleted, userState);
    }
    
    private void OnGetLisPatInfoByDateOperationCompleted(object arg) {
        if ((this.GetLisPatInfoByDateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisPatInfoByDateCompleted(this, new GetLisPatInfoByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisCrisisRecode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisCrisisRecode(string timeStart, string timeEnd) {
        object[] results = this.Invoke("GetLisCrisisRecode", new object[] {
                    timeStart,
                    timeEnd});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisCrisisRecode(string timeStart, string timeEnd, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisCrisisRecode", new object[] {
                    timeStart,
                    timeEnd}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisCrisisRecode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisCrisisRecodeAsync(string timeStart, string timeEnd) {
        this.GetLisCrisisRecodeAsync(timeStart, timeEnd, null);
    }
    
    /// <remarks/>
    public void GetLisCrisisRecodeAsync(string timeStart, string timeEnd, object userState) {
        if ((this.GetLisCrisisRecodeOperationCompleted == null)) {
            this.GetLisCrisisRecodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisCrisisRecodeOperationCompleted);
        }
        this.InvokeAsync("GetLisCrisisRecode", new object[] {
                    timeStart,
                    timeEnd}, this.GetLisCrisisRecodeOperationCompleted, userState);
    }
    
    private void OnGetLisCrisisRecodeOperationCompleted(object arg) {
        if ((this.GetLisCrisisRecodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisCrisisRecodeCompleted(this, new GetLisCrisisRecodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisItemSenResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisItemSenResult(string itemCode) {
        object[] results = this.Invoke("GetLisItemSenResult", new object[] {
                    itemCode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisItemSenResult(string itemCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisItemSenResult", new object[] {
                    itemCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisItemSenResult(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisItemSenResultAsync(string itemCode) {
        this.GetLisItemSenResultAsync(itemCode, null);
    }
    
    /// <remarks/>
    public void GetLisItemSenResultAsync(string itemCode, object userState) {
        if ((this.GetLisItemSenResultOperationCompleted == null)) {
            this.GetLisItemSenResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisItemSenResultOperationCompleted);
        }
        this.InvokeAsync("GetLisItemSenResult", new object[] {
                    itemCode}, this.GetLisItemSenResultOperationCompleted, userState);
    }
    
    private void OnGetLisItemSenResultOperationCompleted(object arg) {
        if ((this.GetLisItemSenResultCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisItemSenResultCompleted(this, new GetLisItemSenResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTLisItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetCTLisItem() {
        object[] results = this.Invoke("GetCTLisItem", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCTLisItem(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCTLisItem", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetCTLisItem(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetCTLisItemAsync() {
        this.GetCTLisItemAsync(null);
    }
    
    /// <remarks/>
    public void GetCTLisItemAsync(object userState) {
        if ((this.GetCTLisItemOperationCompleted == null)) {
            this.GetCTLisItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTLisItemOperationCompleted);
        }
        this.InvokeAsync("GetCTLisItem", new object[0], this.GetCTLisItemOperationCompleted, userState);
    }
    
    private void OnGetCTLisItemOperationCompleted(object arg) {
        if ((this.GetCTLisItemCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCTLisItemCompleted(this, new GetCTLisItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCTSpecimen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetCTSpecimen() {
        object[] results = this.Invoke("GetCTSpecimen", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCTSpecimen(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCTSpecimen", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetCTSpecimen(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetCTSpecimenAsync() {
        this.GetCTSpecimenAsync(null);
    }
    
    /// <remarks/>
    public void GetCTSpecimenAsync(object userState) {
        if ((this.GetCTSpecimenOperationCompleted == null)) {
            this.GetCTSpecimenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCTSpecimenOperationCompleted);
        }
        this.InvokeAsync("GetCTSpecimen", new object[0], this.GetCTSpecimenOperationCompleted, userState);
    }
    
    private void OnGetCTSpecimenOperationCompleted(object arg) {
        if ((this.GetCTSpecimenCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCTSpecimenCompleted(this, new GetCTSpecimenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNotGatherBarcode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetNotGatherBarcode(string bc_yz_id) {
        object[] results = this.Invoke("GetNotGatherBarcode", new object[] {
                    bc_yz_id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetNotGatherBarcode(string bc_yz_id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetNotGatherBarcode", new object[] {
                    bc_yz_id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetNotGatherBarcode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetNotGatherBarcodeAsync(string bc_yz_id) {
        this.GetNotGatherBarcodeAsync(bc_yz_id, null);
    }
    
    /// <remarks/>
    public void GetNotGatherBarcodeAsync(string bc_yz_id, object userState) {
        if ((this.GetNotGatherBarcodeOperationCompleted == null)) {
            this.GetNotGatherBarcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotGatherBarcodeOperationCompleted);
        }
        this.InvokeAsync("GetNotGatherBarcode", new object[] {
                    bc_yz_id}, this.GetNotGatherBarcodeOperationCompleted, userState);
    }
    
    private void OnGetNotGatherBarcodeOperationCompleted(object arg) {
        if ((this.GetNotGatherBarcodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetNotGatherBarcodeCompleted(this, new GetNotGatherBarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/V_Hais_Pathogen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string V_Hais_Pathogen() {
        object[] results = this.Invoke("V_Hais_Pathogen", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginV_Hais_Pathogen(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("V_Hais_Pathogen", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndV_Hais_Pathogen(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void V_Hais_PathogenAsync() {
        this.V_Hais_PathogenAsync(null);
    }
    
    /// <remarks/>
    public void V_Hais_PathogenAsync(object userState) {
        if ((this.V_Hais_PathogenOperationCompleted == null)) {
            this.V_Hais_PathogenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnV_Hais_PathogenOperationCompleted);
        }
        this.InvokeAsync("V_Hais_Pathogen", new object[0], this.V_Hais_PathogenOperationCompleted, userState);
    }
    
    private void OnV_Hais_PathogenOperationCompleted(object arg) {
        if ((this.V_Hais_PathogenCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.V_Hais_PathogenCompleted(this, new V_Hais_PathogenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/V_Hais_AntiName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string V_Hais_AntiName() {
        object[] results = this.Invoke("V_Hais_AntiName", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginV_Hais_AntiName(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("V_Hais_AntiName", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndV_Hais_AntiName(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void V_Hais_AntiNameAsync() {
        this.V_Hais_AntiNameAsync(null);
    }
    
    /// <remarks/>
    public void V_Hais_AntiNameAsync(object userState) {
        if ((this.V_Hais_AntiNameOperationCompleted == null)) {
            this.V_Hais_AntiNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnV_Hais_AntiNameOperationCompleted);
        }
        this.InvokeAsync("V_Hais_AntiName", new object[0], this.V_Hais_AntiNameOperationCompleted, userState);
    }
    
    private void OnV_Hais_AntiNameOperationCompleted(object arg) {
        if ((this.V_Hais_AntiNameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.V_Hais_AntiNameCompleted(this, new V_Hais_AntiNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientsPicPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPatientsPicPath(string pat_id) {
        object[] results = this.Invoke("GetPatientsPicPath", new object[] {
                    pat_id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPatientsPicPath(string pat_id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPatientsPicPath", new object[] {
                    pat_id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetPatientsPicPath(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetPatientsPicPathAsync(string pat_id) {
        this.GetPatientsPicPathAsync(pat_id, null);
    }
    
    /// <remarks/>
    public void GetPatientsPicPathAsync(string pat_id, object userState) {
        if ((this.GetPatientsPicPathOperationCompleted == null)) {
            this.GetPatientsPicPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsPicPathOperationCompleted);
        }
        this.InvokeAsync("GetPatientsPicPath", new object[] {
                    pat_id}, this.GetPatientsPicPathOperationCompleted, userState);
    }
    
    private void OnGetPatientsPicPathOperationCompleted(object arg) {
        if ((this.GetPatientsPicPathCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientsPicPathCompleted(this, new GetPatientsPicPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInfoByBarcode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateInfoByBarcode(string bc_bar_code, string ReceiverCode) {
        object[] results = this.Invoke("UpdateInfoByBarcode", new object[] {
                    bc_bar_code,
                    ReceiverCode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateInfoByBarcode(string bc_bar_code, string ReceiverCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateInfoByBarcode", new object[] {
                    bc_bar_code,
                    ReceiverCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateInfoByBarcode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateInfoByBarcodeAsync(string bc_bar_code, string ReceiverCode) {
        this.UpdateInfoByBarcodeAsync(bc_bar_code, ReceiverCode, null);
    }
    
    /// <remarks/>
    public void UpdateInfoByBarcodeAsync(string bc_bar_code, string ReceiverCode, object userState) {
        if ((this.UpdateInfoByBarcodeOperationCompleted == null)) {
            this.UpdateInfoByBarcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInfoByBarcodeOperationCompleted);
        }
        this.InvokeAsync("UpdateInfoByBarcode", new object[] {
                    bc_bar_code,
                    ReceiverCode}, this.UpdateInfoByBarcodeOperationCompleted, userState);
    }
    
    private void OnUpdateInfoByBarcodeOperationCompleted(object arg) {
        if ((this.UpdateInfoByBarcodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateInfoByBarcodeCompleted(this, new UpdateInfoByBarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportPrinted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ReportPrinted(string ReportId, string PrintedTime, string PrintedType, string MachineName) {
        object[] results = this.Invoke("ReportPrinted", new object[] {
                    ReportId,
                    PrintedTime,
                    PrintedType,
                    MachineName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReportPrinted(string ReportId, string PrintedTime, string PrintedType, string MachineName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReportPrinted", new object[] {
                    ReportId,
                    PrintedTime,
                    PrintedType,
                    MachineName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndReportPrinted(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ReportPrintedAsync(string ReportId, string PrintedTime, string PrintedType, string MachineName) {
        this.ReportPrintedAsync(ReportId, PrintedTime, PrintedType, MachineName, null);
    }
    
    /// <remarks/>
    public void ReportPrintedAsync(string ReportId, string PrintedTime, string PrintedType, string MachineName, object userState) {
        if ((this.ReportPrintedOperationCompleted == null)) {
            this.ReportPrintedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportPrintedOperationCompleted);
        }
        this.InvokeAsync("ReportPrinted", new object[] {
                    ReportId,
                    PrintedTime,
                    PrintedType,
                    MachineName}, this.ReportPrintedOperationCompleted, userState);
    }
    
    private void OnReportPrintedOperationCompleted(object arg) {
        if ((this.ReportPrintedCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReportPrintedCompleted(this, new ReportPrintedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisReportPic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisReportPic(string PatID) {
        object[] results = this.Invoke("GetLisReportPic", new object[] {
                    PatID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisReportPic(string PatID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisReportPic", new object[] {
                    PatID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisReportPic(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisReportPicAsync(string PatID) {
        this.GetLisReportPicAsync(PatID, null);
    }
    
    /// <remarks/>
    public void GetLisReportPicAsync(string PatID, object userState) {
        if ((this.GetLisReportPicOperationCompleted == null)) {
            this.GetLisReportPicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisReportPicOperationCompleted);
        }
        this.InvokeAsync("GetLisReportPic", new object[] {
                    PatID}, this.GetLisReportPicOperationCompleted, userState);
    }
    
    private void OnGetLisReportPicOperationCompleted(object arg) {
        if ((this.GetLisReportPicCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisReportPicCompleted(this, new GetLisReportPicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmBcBarCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ConfirmBcBarCode(string strBcNo, string userId, string userName, string bcFlag, string sysName) {
        object[] results = this.Invoke("ConfirmBcBarCode", new object[] {
                    strBcNo,
                    userId,
                    userName,
                    bcFlag,
                    sysName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginConfirmBcBarCode(string strBcNo, string userId, string userName, string bcFlag, string sysName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ConfirmBcBarCode", new object[] {
                    strBcNo,
                    userId,
                    userName,
                    bcFlag,
                    sysName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndConfirmBcBarCode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ConfirmBcBarCodeAsync(string strBcNo, string userId, string userName, string bcFlag, string sysName) {
        this.ConfirmBcBarCodeAsync(strBcNo, userId, userName, bcFlag, sysName, null);
    }
    
    /// <remarks/>
    public void ConfirmBcBarCodeAsync(string strBcNo, string userId, string userName, string bcFlag, string sysName, object userState) {
        if ((this.ConfirmBcBarCodeOperationCompleted == null)) {
            this.ConfirmBcBarCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmBcBarCodeOperationCompleted);
        }
        this.InvokeAsync("ConfirmBcBarCode", new object[] {
                    strBcNo,
                    userId,
                    userName,
                    bcFlag,
                    sysName}, this.ConfirmBcBarCodeOperationCompleted, userState);
    }
    
    private void OnConfirmBcBarCodeOperationCompleted(object arg) {
        if ((this.ConfirmBcBarCodeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ConfirmBcBarCodeCompleted(this, new ConfirmBcBarCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisRepByPregnamt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisRepByPregnamt(string strSfzh, string strPatName, string dateTimeFrom, string dateTimeTo) {
        object[] results = this.Invoke("GetLisRepByPregnamt", new object[] {
                    strSfzh,
                    strPatName,
                    dateTimeFrom,
                    dateTimeTo});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisRepByPregnamt(string strSfzh, string strPatName, string dateTimeFrom, string dateTimeTo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisRepByPregnamt", new object[] {
                    strSfzh,
                    strPatName,
                    dateTimeFrom,
                    dateTimeTo}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisRepByPregnamt(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisRepByPregnamtAsync(string strSfzh, string strPatName, string dateTimeFrom, string dateTimeTo) {
        this.GetLisRepByPregnamtAsync(strSfzh, strPatName, dateTimeFrom, dateTimeTo, null);
    }
    
    /// <remarks/>
    public void GetLisRepByPregnamtAsync(string strSfzh, string strPatName, string dateTimeFrom, string dateTimeTo, object userState) {
        if ((this.GetLisRepByPregnamtOperationCompleted == null)) {
            this.GetLisRepByPregnamtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisRepByPregnamtOperationCompleted);
        }
        this.InvokeAsync("GetLisRepByPregnamt", new object[] {
                    strSfzh,
                    strPatName,
                    dateTimeFrom,
                    dateTimeTo}, this.GetLisRepByPregnamtOperationCompleted, userState);
    }
    
    private void OnGetLisRepByPregnamtOperationCompleted(object arg) {
        if ((this.GetLisRepByPregnamtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisRepByPregnamtCompleted(this, new GetLisRepByPregnamtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBloodTypeResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetBloodTypeResult(string inNobarCode, string dict_itm_id) {
        object[] results = this.Invoke("GetBloodTypeResult", new object[] {
                    inNobarCode,
                    dict_itm_id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBloodTypeResult(string inNobarCode, string dict_itm_id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBloodTypeResult", new object[] {
                    inNobarCode,
                    dict_itm_id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetBloodTypeResult(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetBloodTypeResultAsync(string inNobarCode, string dict_itm_id) {
        this.GetBloodTypeResultAsync(inNobarCode, dict_itm_id, null);
    }
    
    /// <remarks/>
    public void GetBloodTypeResultAsync(string inNobarCode, string dict_itm_id, object userState) {
        if ((this.GetBloodTypeResultOperationCompleted == null)) {
            this.GetBloodTypeResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBloodTypeResultOperationCompleted);
        }
        this.InvokeAsync("GetBloodTypeResult", new object[] {
                    inNobarCode,
                    dict_itm_id}, this.GetBloodTypeResultOperationCompleted, userState);
    }
    
    private void OnGetBloodTypeResultOperationCompleted(object arg) {
        if ((this.GetBloodTypeResultCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBloodTypeResultCompleted(this, new GetBloodTypeResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/V_LXZZ_JY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string V_LXZZ_JY(string ZYLSH, string dateTimeFrom, string dateTimeTo) {
        object[] results = this.Invoke("V_LXZZ_JY", new object[] {
                    ZYLSH,
                    dateTimeFrom,
                    dateTimeTo});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginV_LXZZ_JY(string ZYLSH, string dateTimeFrom, string dateTimeTo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("V_LXZZ_JY", new object[] {
                    ZYLSH,
                    dateTimeFrom,
                    dateTimeTo}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndV_LXZZ_JY(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void V_LXZZ_JYAsync(string ZYLSH, string dateTimeFrom, string dateTimeTo) {
        this.V_LXZZ_JYAsync(ZYLSH, dateTimeFrom, dateTimeTo, null);
    }
    
    /// <remarks/>
    public void V_LXZZ_JYAsync(string ZYLSH, string dateTimeFrom, string dateTimeTo, object userState) {
        if ((this.V_LXZZ_JYOperationCompleted == null)) {
            this.V_LXZZ_JYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnV_LXZZ_JYOperationCompleted);
        }
        this.InvokeAsync("V_LXZZ_JY", new object[] {
                    ZYLSH,
                    dateTimeFrom,
                    dateTimeTo}, this.V_LXZZ_JYOperationCompleted, userState);
    }
    
    private void OnV_LXZZ_JYOperationCompleted(object arg) {
        if ((this.V_LXZZ_JYCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.V_LXZZ_JYCompleted(this, new V_LXZZ_JYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/V_LXZZ_JYMX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string V_LXZZ_JYMX(string JYID) {
        object[] results = this.Invoke("V_LXZZ_JYMX", new object[] {
                    JYID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginV_LXZZ_JYMX(string JYID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("V_LXZZ_JYMX", new object[] {
                    JYID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndV_LXZZ_JYMX(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void V_LXZZ_JYMXAsync(string JYID) {
        this.V_LXZZ_JYMXAsync(JYID, null);
    }
    
    /// <remarks/>
    public void V_LXZZ_JYMXAsync(string JYID, object userState) {
        if ((this.V_LXZZ_JYMXOperationCompleted == null)) {
            this.V_LXZZ_JYMXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnV_LXZZ_JYMXOperationCompleted);
        }
        this.InvokeAsync("V_LXZZ_JYMX", new object[] {
                    JYID}, this.V_LXZZ_JYMXOperationCompleted, userState);
    }
    
    private void OnV_LXZZ_JYMXOperationCompleted(object arg) {
        if ((this.V_LXZZ_JYMXCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.V_LXZZ_JYMXCompleted(this, new V_LXZZ_JYMXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBarcodeForUPID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetBarcodeForUPID(string bc_upid) {
        object[] results = this.Invoke("GetBarcodeForUPID", new object[] {
                    bc_upid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBarcodeForUPID(string bc_upid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBarcodeForUPID", new object[] {
                    bc_upid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetBarcodeForUPID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetBarcodeForUPIDAsync(string bc_upid) {
        this.GetBarcodeForUPIDAsync(bc_upid, null);
    }
    
    /// <remarks/>
    public void GetBarcodeForUPIDAsync(string bc_upid, object userState) {
        if ((this.GetBarcodeForUPIDOperationCompleted == null)) {
            this.GetBarcodeForUPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBarcodeForUPIDOperationCompleted);
        }
        this.InvokeAsync("GetBarcodeForUPID", new object[] {
                    bc_upid}, this.GetBarcodeForUPIDOperationCompleted, userState);
    }
    
    private void OnGetBarcodeForUPIDOperationCompleted(object arg) {
        if ((this.GetBarcodeForUPIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBarcodeForUPIDCompleted(this, new GetBarcodeForUPIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBarcodeForPID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetBarcodeForPID(string bc_pid) {
        object[] results = this.Invoke("GetBarcodeForPID", new object[] {
                    bc_pid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBarcodeForPID(string bc_pid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBarcodeForPID", new object[] {
                    bc_pid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetBarcodeForPID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetBarcodeForPIDAsync(string bc_pid) {
        this.GetBarcodeForPIDAsync(bc_pid, null);
    }
    
    /// <remarks/>
    public void GetBarcodeForPIDAsync(string bc_pid, object userState) {
        if ((this.GetBarcodeForPIDOperationCompleted == null)) {
            this.GetBarcodeForPIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBarcodeForPIDOperationCompleted);
        }
        this.InvokeAsync("GetBarcodeForPID", new object[] {
                    bc_pid}, this.GetBarcodeForPIDOperationCompleted, userState);
    }
    
    private void OnGetBarcodeForPIDOperationCompleted(object arg) {
        if ((this.GetBarcodeForPIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBarcodeForPIDCompleted(this, new GetBarcodeForPIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LIS_GetCuvetteInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string LIS_GetCuvetteInfo(string strXml) {
        object[] results = this.Invoke("LIS_GetCuvetteInfo", new object[] {
                    strXml});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLIS_GetCuvetteInfo(string strXml, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LIS_GetCuvetteInfo", new object[] {
                    strXml}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndLIS_GetCuvetteInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void LIS_GetCuvetteInfoAsync(string strXml) {
        this.LIS_GetCuvetteInfoAsync(strXml, null);
    }
    
    /// <remarks/>
    public void LIS_GetCuvetteInfoAsync(string strXml, object userState) {
        if ((this.LIS_GetCuvetteInfoOperationCompleted == null)) {
            this.LIS_GetCuvetteInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLIS_GetCuvetteInfoOperationCompleted);
        }
        this.InvokeAsync("LIS_GetCuvetteInfo", new object[] {
                    strXml}, this.LIS_GetCuvetteInfoOperationCompleted, userState);
    }
    
    private void OnLIS_GetCuvetteInfoOperationCompleted(object arg) {
        if ((this.LIS_GetCuvetteInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LIS_GetCuvetteInfoCompleted(this, new LIS_GetCuvetteInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryLabResultPicture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string QueryLabResultPicture(string OrderII) {
        object[] results = this.Invoke("QueryLabResultPicture", new object[] {
                    OrderII});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginQueryLabResultPicture(string OrderII, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("QueryLabResultPicture", new object[] {
                    OrderII}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndQueryLabResultPicture(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void QueryLabResultPictureAsync(string OrderII) {
        this.QueryLabResultPictureAsync(OrderII, null);
    }
    
    /// <remarks/>
    public void QueryLabResultPictureAsync(string OrderII, object userState) {
        if ((this.QueryLabResultPictureOperationCompleted == null)) {
            this.QueryLabResultPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryLabResultPictureOperationCompleted);
        }
        this.InvokeAsync("QueryLabResultPicture", new object[] {
                    OrderII}, this.QueryLabResultPictureOperationCompleted, userState);
    }
    
    private void OnQueryLabResultPictureOperationCompleted(object arg) {
        if ((this.QueryLabResultPictureCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.QueryLabResultPictureCompleted(this, new QueryLabResultPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUrgentMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string DeleteUrgentMessage(string strxml) {
        object[] results = this.Invoke("DeleteUrgentMessage", new object[] {
                    strxml});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteUrgentMessage(string strxml, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteUrgentMessage", new object[] {
                    strxml}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndDeleteUrgentMessage(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void DeleteUrgentMessageAsync(string strxml) {
        this.DeleteUrgentMessageAsync(strxml, null);
    }
    
    /// <remarks/>
    public void DeleteUrgentMessageAsync(string strxml, object userState) {
        if ((this.DeleteUrgentMessageOperationCompleted == null)) {
            this.DeleteUrgentMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUrgentMessageOperationCompleted);
        }
        this.InvokeAsync("DeleteUrgentMessage", new object[] {
                    strxml}, this.DeleteUrgentMessageOperationCompleted, userState);
    }
    
    private void OnDeleteUrgentMessageOperationCompleted(object arg) {
        if ((this.DeleteUrgentMessageCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteUrgentMessageCompleted(this, new DeleteUrgentMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientsInfoWithOutIf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPatientsInfoWithOutIf() {
        object[] results = this.Invoke("GetPatientsInfoWithOutIf", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPatientsInfoWithOutIf(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPatientsInfoWithOutIf", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetPatientsInfoWithOutIf(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetPatientsInfoWithOutIfAsync() {
        this.GetPatientsInfoWithOutIfAsync(null);
    }
    
    /// <remarks/>
    public void GetPatientsInfoWithOutIfAsync(object userState) {
        if ((this.GetPatientsInfoWithOutIfOperationCompleted == null)) {
            this.GetPatientsInfoWithOutIfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsInfoWithOutIfOperationCompleted);
        }
        this.InvokeAsync("GetPatientsInfoWithOutIf", new object[0], this.GetPatientsInfoWithOutIfOperationCompleted, userState);
    }
    
    private void OnGetPatientsInfoWithOutIfOperationCompleted(object arg) {
        if ((this.GetPatientsInfoWithOutIfCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientsInfoWithOutIfCompleted(this, new GetPatientsInfoWithOutIfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientsInfoByDateRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPatientsInfoByDateRange(string dateTimeFrom, string dateTimeTo) {
        object[] results = this.Invoke("GetPatientsInfoByDateRange", new object[] {
                    dateTimeFrom,
                    dateTimeTo});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPatientsInfoByDateRange(string dateTimeFrom, string dateTimeTo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPatientsInfoByDateRange", new object[] {
                    dateTimeFrom,
                    dateTimeTo}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetPatientsInfoByDateRange(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetPatientsInfoByDateRangeAsync(string dateTimeFrom, string dateTimeTo) {
        this.GetPatientsInfoByDateRangeAsync(dateTimeFrom, dateTimeTo, null);
    }
    
    /// <remarks/>
    public void GetPatientsInfoByDateRangeAsync(string dateTimeFrom, string dateTimeTo, object userState) {
        if ((this.GetPatientsInfoByDateRangeOperationCompleted == null)) {
            this.GetPatientsInfoByDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsInfoByDateRangeOperationCompleted);
        }
        this.InvokeAsync("GetPatientsInfoByDateRange", new object[] {
                    dateTimeFrom,
                    dateTimeTo}, this.GetPatientsInfoByDateRangeOperationCompleted, userState);
    }
    
    private void OnGetPatientsInfoByDateRangeOperationCompleted(object arg) {
        if ((this.GetPatientsInfoByDateRangeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPatientsInfoByDateRangeCompleted(this, new GetPatientsInfoByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePatSlftPrt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdatePatSlftPrt(string listPatid, string prt_status) {
        object[] results = this.Invoke("UpdatePatSlftPrt", new object[] {
                    listPatid,
                    prt_status});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdatePatSlftPrt(string listPatid, string prt_status, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdatePatSlftPrt", new object[] {
                    listPatid,
                    prt_status}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdatePatSlftPrt(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdatePatSlftPrtAsync(string listPatid, string prt_status) {
        this.UpdatePatSlftPrtAsync(listPatid, prt_status, null);
    }
    
    /// <remarks/>
    public void UpdatePatSlftPrtAsync(string listPatid, string prt_status, object userState) {
        if ((this.UpdatePatSlftPrtOperationCompleted == null)) {
            this.UpdatePatSlftPrtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatSlftPrtOperationCompleted);
        }
        this.InvokeAsync("UpdatePatSlftPrt", new object[] {
                    listPatid,
                    prt_status}, this.UpdatePatSlftPrtOperationCompleted, userState);
    }
    
    private void OnUpdatePatSlftPrtOperationCompleted(object arg) {
        if ((this.UpdatePatSlftPrtCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdatePatSlftPrtCompleted(this, new UpdatePatSlftPrtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendBloodLeadNotice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string SendBloodLeadNotice(string noticeXml) {
        object[] results = this.Invoke("SendBloodLeadNotice", new object[] {
                    noticeXml});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSendBloodLeadNotice(string noticeXml, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SendBloodLeadNotice", new object[] {
                    noticeXml}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndSendBloodLeadNotice(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void SendBloodLeadNoticeAsync(string noticeXml) {
        this.SendBloodLeadNoticeAsync(noticeXml, null);
    }
    
    /// <remarks/>
    public void SendBloodLeadNoticeAsync(string noticeXml, object userState) {
        if ((this.SendBloodLeadNoticeOperationCompleted == null)) {
            this.SendBloodLeadNoticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendBloodLeadNoticeOperationCompleted);
        }
        this.InvokeAsync("SendBloodLeadNotice", new object[] {
                    noticeXml}, this.SendBloodLeadNoticeOperationCompleted, userState);
    }
    
    private void OnSendBloodLeadNoticeOperationCompleted(object arg) {
        if ((this.SendBloodLeadNoticeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendBloodLeadNoticeCompleted(this, new SendBloodLeadNoticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLisReportForCDA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetLisReportForCDA(string patID) {
        object[] results = this.Invoke("GetLisReportForCDA", new object[] {
                    patID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLisReportForCDA(string patID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLisReportForCDA", new object[] {
                    patID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetLisReportForCDA(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetLisReportForCDAAsync(string patID) {
        this.GetLisReportForCDAAsync(patID, null);
    }
    
    /// <remarks/>
    public void GetLisReportForCDAAsync(string patID, object userState) {
        if ((this.GetLisReportForCDAOperationCompleted == null)) {
            this.GetLisReportForCDAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLisReportForCDAOperationCompleted);
        }
        this.InvokeAsync("GetLisReportForCDA", new object[] {
                    patID}, this.GetLisReportForCDAOperationCompleted, userState);
    }
    
    private void OnGetLisReportForCDAOperationCompleted(object arg) {
        if ((this.GetLisReportForCDACompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLisReportForCDACompleted(this, new GetLisReportForCDACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportAmount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetReportAmount(string pat_in_no, string pat_admiss_times) {
        object[] results = this.Invoke("GetReportAmount", new object[] {
                    pat_in_no,
                    pat_admiss_times});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetReportAmount(string pat_in_no, string pat_admiss_times, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetReportAmount", new object[] {
                    pat_in_no,
                    pat_admiss_times}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetReportAmount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetReportAmountAsync(string pat_in_no, string pat_admiss_times) {
        this.GetReportAmountAsync(pat_in_no, pat_admiss_times, null);
    }
    
    /// <remarks/>
    public void GetReportAmountAsync(string pat_in_no, string pat_admiss_times, object userState) {
        if ((this.GetReportAmountOperationCompleted == null)) {
            this.GetReportAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportAmountOperationCompleted);
        }
        this.InvokeAsync("GetReportAmount", new object[] {
                    pat_in_no,
                    pat_admiss_times}, this.GetReportAmountOperationCompleted, userState);
    }
    
    private void OnGetReportAmountOperationCompleted(object arg) {
        if ((this.GetReportAmountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetReportAmountCompleted(this, new GetReportAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportImages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetReportImages(string patID) {
        object[] results = this.Invoke("GetReportImages", new object[] {
                    patID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetReportImages(string patID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetReportImages", new object[] {
                    patID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetReportImages(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetReportImagesAsync(string patID) {
        this.GetReportImagesAsync(patID, null);
    }
    
    /// <remarks/>
    public void GetReportImagesAsync(string patID, object userState) {
        if ((this.GetReportImagesOperationCompleted == null)) {
            this.GetReportImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportImagesOperationCompleted);
        }
        this.InvokeAsync("GetReportImages", new object[] {
                    patID}, this.GetReportImagesOperationCompleted, userState);
    }
    
    private void OnGetReportImagesOperationCompleted(object arg) {
        if ((this.GetReportImagesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetReportImagesCompleted(this, new GetReportImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDIYWJZMsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string AddDIYWJZMsg(string XmlParams) {
        object[] results = this.Invoke("AddDIYWJZMsg", new object[] {
                    XmlParams});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddDIYWJZMsg(string XmlParams, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddDIYWJZMsg", new object[] {
                    XmlParams}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndAddDIYWJZMsg(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void AddDIYWJZMsgAsync(string XmlParams) {
        this.AddDIYWJZMsgAsync(XmlParams, null);
    }
    
    /// <remarks/>
    public void AddDIYWJZMsgAsync(string XmlParams, object userState) {
        if ((this.AddDIYWJZMsgOperationCompleted == null)) {
            this.AddDIYWJZMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDIYWJZMsgOperationCompleted);
        }
        this.InvokeAsync("AddDIYWJZMsg", new object[] {
                    XmlParams}, this.AddDIYWJZMsgOperationCompleted, userState);
    }
    
    private void OnAddDIYWJZMsgOperationCompleted(object arg) {
        if ((this.AddDIYWJZMsgCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddDIYWJZMsgCompleted(this, new AddDIYWJZMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplyStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetApplyStatus(string barcode) {
        object[] results = this.Invoke("GetApplyStatus", new object[] {
                    barcode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetApplyStatus(string barcode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetApplyStatus", new object[] {
                    barcode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetApplyStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetApplyStatusAsync(string barcode) {
        this.GetApplyStatusAsync(barcode, null);
    }
    
    /// <remarks/>
    public void GetApplyStatusAsync(string barcode, object userState) {
        if ((this.GetApplyStatusOperationCompleted == null)) {
            this.GetApplyStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplyStatusOperationCompleted);
        }
        this.InvokeAsync("GetApplyStatus", new object[] {
                    barcode}, this.GetApplyStatusOperationCompleted, userState);
    }
    
    private void OnGetApplyStatusOperationCompleted(object arg) {
        if ((this.GetApplyStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetApplyStatusCompleted(this, new GetApplyStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetPatientsInfoCompletedEventHandler(object sender, GetPatientsInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPatientsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPatientsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetPatientsInfoSGCompletedEventHandler(object sender, GetPatientsInfoSGCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPatientsInfoSGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPatientsInfoSGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetPatientsInfoByDeptIDCompletedEventHandler(object sender, GetPatientsInfoByDeptIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPatientsInfoByDeptIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPatientsInfoByDeptIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetResultInfoCompletedEventHandler(object sender, GetResultInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetResultInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetResultInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetResultInfoByBarCodeCompletedEventHandler(object sender, GetResultInfoByBarCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetResultInfoByBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetResultInfoByBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetResultByItmIDCompletedEventHandler(object sender, GetResultByItmIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetResultByItmIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetResultByItmIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetResultByItmIDAndSamIdCompletedEventHandler(object sender, GetResultByItmIDAndSamIdCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetResultByItmIDAndSamIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetResultByItmIDAndSamIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetPatientsInfoByBarCodeCompletedEventHandler(object sender, GetPatientsInfoByBarCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPatientsInfoByBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPatientsInfoByBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLISSampleCompletedEventHandler(object sender, GetLISSampleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLISSampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLISSampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetBacResultInfoCompletedEventHandler(object sender, GetBacResultInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBacResultInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBacResultInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetCsResultInfoCompletedEventHandler(object sender, GetCsResultInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCsResultInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCsResultInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetBcPatientsInfoCompletedEventHandler(object sender, GetBcPatientsInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBcPatientsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBcPatientsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void UpdateBarCodePrintStatusCompletedEventHandler(object sender, UpdateBarCodePrintStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateBarCodePrintStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateBarCodePrintStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetQualitativeResultByItmIDCompletedEventHandler(object sender, GetQualitativeResultByItmIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetQualitativeResultByItmIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetQualitativeResultByItmIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisSpecimenReportCompletedEventHandler(object sender, GetLisSpecimenReportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisSpecimenReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisSpecimenReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisReportResultCompletedEventHandler(object sender, GetLisReportResultCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisReportResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisReportResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisItemResultCompletedEventHandler(object sender, GetLisItemResultCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisItemResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisItemResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisItemResultByDateCompletedEventHandler(object sender, GetLisItemResultByDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisItemResultByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisItemResultByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisPatInfoByDateCompletedEventHandler(object sender, GetLisPatInfoByDateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisPatInfoByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisPatInfoByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisCrisisRecodeCompletedEventHandler(object sender, GetLisCrisisRecodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisCrisisRecodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisCrisisRecodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisItemSenResultCompletedEventHandler(object sender, GetLisItemSenResultCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisItemSenResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisItemSenResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetCTLisItemCompletedEventHandler(object sender, GetCTLisItemCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCTLisItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCTLisItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetCTSpecimenCompletedEventHandler(object sender, GetCTSpecimenCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCTSpecimenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCTSpecimenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetNotGatherBarcodeCompletedEventHandler(object sender, GetNotGatherBarcodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetNotGatherBarcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetNotGatherBarcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void V_Hais_PathogenCompletedEventHandler(object sender, V_Hais_PathogenCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class V_Hais_PathogenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal V_Hais_PathogenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void V_Hais_AntiNameCompletedEventHandler(object sender, V_Hais_AntiNameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class V_Hais_AntiNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal V_Hais_AntiNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetPatientsPicPathCompletedEventHandler(object sender, GetPatientsPicPathCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPatientsPicPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPatientsPicPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void UpdateInfoByBarcodeCompletedEventHandler(object sender, UpdateInfoByBarcodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateInfoByBarcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateInfoByBarcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ReportPrintedCompletedEventHandler(object sender, ReportPrintedCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReportPrintedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReportPrintedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisReportPicCompletedEventHandler(object sender, GetLisReportPicCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisReportPicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisReportPicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ConfirmBcBarCodeCompletedEventHandler(object sender, ConfirmBcBarCodeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ConfirmBcBarCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ConfirmBcBarCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisRepByPregnamtCompletedEventHandler(object sender, GetLisRepByPregnamtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisRepByPregnamtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisRepByPregnamtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetBloodTypeResultCompletedEventHandler(object sender, GetBloodTypeResultCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBloodTypeResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBloodTypeResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void V_LXZZ_JYCompletedEventHandler(object sender, V_LXZZ_JYCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class V_LXZZ_JYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal V_LXZZ_JYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void V_LXZZ_JYMXCompletedEventHandler(object sender, V_LXZZ_JYMXCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class V_LXZZ_JYMXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal V_LXZZ_JYMXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetBarcodeForUPIDCompletedEventHandler(object sender, GetBarcodeForUPIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBarcodeForUPIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBarcodeForUPIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetBarcodeForPIDCompletedEventHandler(object sender, GetBarcodeForPIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBarcodeForPIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBarcodeForPIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void LIS_GetCuvetteInfoCompletedEventHandler(object sender, LIS_GetCuvetteInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LIS_GetCuvetteInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LIS_GetCuvetteInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void QueryLabResultPictureCompletedEventHandler(object sender, QueryLabResultPictureCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class QueryLabResultPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal QueryLabResultPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void DeleteUrgentMessageCompletedEventHandler(object sender, DeleteUrgentMessageCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteUrgentMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteUrgentMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetPatientsInfoWithOutIfCompletedEventHandler(object sender, GetPatientsInfoWithOutIfCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPatientsInfoWithOutIfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPatientsInfoWithOutIfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetPatientsInfoByDateRangeCompletedEventHandler(object sender, GetPatientsInfoByDateRangeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPatientsInfoByDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPatientsInfoByDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void UpdatePatSlftPrtCompletedEventHandler(object sender, UpdatePatSlftPrtCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdatePatSlftPrtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdatePatSlftPrtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void SendBloodLeadNoticeCompletedEventHandler(object sender, SendBloodLeadNoticeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendBloodLeadNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SendBloodLeadNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetLisReportForCDACompletedEventHandler(object sender, GetLisReportForCDACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLisReportForCDACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLisReportForCDACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetReportAmountCompletedEventHandler(object sender, GetReportAmountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetReportAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetReportAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetReportImagesCompletedEventHandler(object sender, GetReportImagesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetReportImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetReportImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void AddDIYWJZMsgCompletedEventHandler(object sender, AddDIYWJZMsgCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddDIYWJZMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddDIYWJZMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetApplyStatusCompletedEventHandler(object sender, GetApplyStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetApplyStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetApplyStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
